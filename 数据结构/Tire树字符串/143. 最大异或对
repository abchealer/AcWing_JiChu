#include <iostream>

using namespace std;
const int N=100010;
int n;
int x;
int tire[N*31][2];//1.Tire树的节点有N*31个，每个只能是0/1

int index=0;
void insert(int x){
    int p=0;
    for(int i=30;~i;i--){//2. ~i代表i>=0
        int u=x>>i&1;   //3. 整数x的二进制的第i位是0/1
        if(!tire[p][u]) tire[p][u]=++index;
         p=tire[p][u];
       //cout<<p;
    }
}
int query(int x){
    int p=0;
    int res=0;
    for(int i=30;~i;i--){
        int u=x>>i&1;
        if(tire[p][!u]){//找不同
             p=tire[p][!u];
             res=res*2+!u;//4. 二进制转换成十进制
        }
        else {
             p=tire[p][u];
             res=res*2+u;
        }
           
    }
    res=res^x;
    return res;
}
int main(){
    cin>>n;
    int a[N];
    int ans=0;
    for(int i=0;i<n;i++){
        cin>>a[i];
        insert(a[i]);
        //ans=max(ans,query(x));
    }
        
    
    for(int i=0;i<n;i++){
        //cout<<query(x)<<endl;
       ans=max(ans,query(a[i]));//max的头文件iostream包括了
        
    }
    cout<<ans;
    
    
    
    
    
    
    
    
    
    return 0;
}
