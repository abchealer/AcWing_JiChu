#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
const int N=300010;
int n, m;
int x, c, l, r;
vector <pair<int,int>> add, query;
vector<int> alls;//用vector：方便排序，去重
int  a[N], s[N], mid;
int find(int x){
    int l=0, r=alls.size()-1;
    while(l<r){
        mid=(l+r)/2;
        if(x<=alls[mid]) r=mid;
        else l =mid+1;
    }
    return r+1;
}
int main(){
    cin>>n>>m;
    //输入存储
    for(int i=0;i<n;i++){
        scanf("%d %d", &x, &c);
        add.push_back({x,c});
        alls.push_back(x);
    }
    for(int i=0;i<m;i++){
        scanf("%d %d", &l, &r);
        query.push_back({l,r});
        alls.push_back(l);
        alls.push_back(r);
    }
    //排序，去重alls(缩小数组)
    sort(alls.begin(), alls.end());
    alls.erase(unique(alls.begin(),alls.end()),  alls.end());
    //映射c到a[], 因为x顺序不变所以c顺序不变，只是数组空间缩小
    for(auto item:add){
        int x=find(item.first);
        a[x] += item.second;
    }
    //缩小后的前缀和
    for(int i=1;i<=alls.size();i++) s[i]=s[i-1]+a[i];
    //前缀和求区间和
    for(auto res:query){
        l = find(res.first);
        r = find(res.second);
        printf("%d\n"， s[r]-s[l-1]);
    }
    
    
    return 0;
}
